---
title: "Map of Typhoons around Japan 2014-2023"
---

::: {.column-screen}

```{python}
# import modules ---------------------------------------------------------------
import polars as pl
pl.Config.set_tbl_rows(7)   # limit num of lines for table preview
import plotly.express as px
import plotly.graph_objects as go 
# print('polars:', pl.__version__)

mapbox_token = open('./data/mapbox/.mapbox_token').read()


# read df parquet --------------------------------------------------------------
df_parquet_f_path = "./data/processed/df_2014-2023.parquet"
# df_parquet_f_path = "./data/processed/df_2015-2023.parquet"
# df_parquet_f_path = "./data/processed/df_2016-2023.parquet"
# df_parquet_f_path = "./data/processed/df_2017-2023.parquet"
# df_parquet_f_path = "./data/processed/df_2018-2023.parquet"
df = pl.read_parquet(df_parquet_f_path)
# print('read df as parquet')
# df


# filter data by year range ----------------------------------------------------
year_range = [2014, 2023]

df_filtered = df.filter(
    pl.col('date_time')
      .dt.year()
      .is_between(year_range[0], year_range[1])
)
# print('df filtered by year range:', year_range)
# df_filtered


# create map -------------------------------------------------------------------
fig_typhoon = px.line_mapbox(
    df_filtered,
    # lat=df_filtered["d_d_latitude"],
    # lon=df_filtered["d_e_longitude"],
    lat="d_d_latitude",
    lon="d_e_longitude",
    color="h_b_int_num_id",
    zoom=3,
    height=1000,
    # animation_frame="h_b_int_num_id",
    animation_frame="year",
    # hover_name='h_b_int_num_id',
    # hover_name=['h_h_storm_name'],
)

fig_typhoon.update_layout(
    mapbox_accesstoken=mapbox_token,
    mapbox_style="light",
    # mapbox_style="outdoors",
    # mapbox_style="basic",
    # mapbox_style="dark",

    # mapbox_style="open-street-map",
    # mapbox_style="carto-darkmatter",
    # mapbox_style="carto-positron",
    # mapbox_zoom=4,
    mapbox_center_lat=36.2048,
    mapbox_center_lon=138.2529,
    margin={"r":0,"t":0,"l":0,"b":0},
    showlegend=False,
    # legend=dict(
    #     xanchor="right",
    #     yanchor="top",
    #     x=0.07,
    #     y=0.99,
    # ),
)

fig_typhoon.show()


# [wip] create map using go.Scattermapbox --------------------------------------------
# fig_typhoon_go = go.Figure(
#     go.Scattermapbox(
#         mode='lines',
#         lat=df_filtered['d_d_latitude'],
#         lon=df_filtered['d_e_longitude'],
#         # line_color=df_filtered['h_b_int_num_id'],
#     )
# )

# fig_typhoon_go.update_layout(
#     mapbox_accesstoken=mapbox_token,
#     mapbox_style="light",
#     # mapbox_style="outdoors",
#     # mapbox_style="basic",
#     # mapbox_style="dark",
#
#     # mapbox_style="open-street-map",
#     # mapbox_style="carto-darkmatter",
#     # mapbox_style="carto-positron",
#     # mapbox_zoom=4,
#     mapbox_center_lat=36.2048,
#     mapbox_center_lon=138.2529,
#     margin={"r":0,"t":0,"l":0,"b":0},
#     showlegend = False,
# )

# fig_typhoon_go.show()
```

:::

---

Source of data: 

- [Japan Meteorological Agency (JMA)](https://www.jma.go.jp/jma/indexe.html)

- [Regional Specialized Meteorological Center (RSMC) Tokyo Typhoon Center](https://www.jma.go.jp/jma/jma-eng/jma-center/rsmc-hp-pub-eg/RSMC_HP.html)

- [RSMC Best Track Data](https://www.jma.go.jp/jma/jma-eng/jma-center/rsmc-hp-pub-eg/besttrack.html)


